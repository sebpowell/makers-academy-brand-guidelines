$grid: (gutter: sizes(base), columns: 12, default-breakpoint: device-large)

@for $i from 1 through map-get($grid, columns)
	@each $key, $value in $breakpoints
		.grid-#{$i}-#{$key}
			+no-bullet
			+clearfix
			+respond-above($key)
				margin-left: -(map-get($grid, gutter))
				margin-right: -(map-get($grid, gutter))

			@if $i < 1
				margin-left: 0
				margin-right: 0
				
			> li
				width: 100%
				margin-bottom: map-get($grid, gutter)
				&:last-child
					margin-bottom: 0
				&:nth-child(#{$i}n + 1)
					// Clears floats after a row is complete for variable height elements.
					clear: both

				@if $i < 1
					padding: 0

				+respond-above($key)
					width: 100% / $i !important
					float: left
					padding: 0 map-get($grid, gutter) !important
					// &:nth-last-of-type(-n+#{$i})
					// 	margin-bottom: 0


@each $key, $value in $breakpoints
	@for $i from 1 through map-get($grid, columns)
		.columns-#{$i}-#{$key}
			width: 100%
			margin-bottom: sizes(double)

			+respond-above($key)
				width: $i * (100% / map-get($grid, columns))
				float: left
				padding: 0 sizes(base)
				margin-bottom: 0
				// &:nth-last-of-type(-n+#{$i})
				// 	margin-bottom: 0

// Generates classes for columns 1 - 12.
@for $i from 1 through map-get($grid, columns)
	.columns-#{$i}
		width: 100%
		float: left
		margin-bottom: sizes(double)
		&:last-child
			margin-bottom: 0
		+respond-above(map-get($grid, default-breakpoint))
			padding: 0 map-get($grid, gutter)
			margin-bottom: 0
			width: $i * (100% / map-get($grid, columns))
			// Add nth-class helper

// Generates classes for column offsets.
@for $i from 1 through map-get($grid, columns)
	.offset-#{$i}
		+respond-above(map-get($grid, default-breakpoint))
			margin-left: $i * (100% / map-get($grid, columns))

.row
	+clearfix
	position: relative
	
	&.no-gutter
		margin-left: 0 !important
		margin-right: 0 !important
		> [class^="column"], > li
			padding: 0 !important
	
	&.vertical-align
		+respond-above(map-get($grid, default-breakpoint))
			display: table
			> [class^="column"]
				float: none
				height: 100%
				display: table-cell
				vertical-align: middle
				
	+respond-above(map-get($grid, default-breakpoint))
		margin-left: -(sizes(base))
		margin-right: -(sizes(base))

// Generate gutter widths
@each $size, $var in $sizes
	.gutter-#{$size}
		+respond-above(map-get($grid, default-breakpoint))
			// Added margin to factor in container-wide padding on smaller sizes
			margin-left: -($var) !important
			margin-right: -($var) !important
			> [class^="column"], > li
				padding: 0 $var !important
	
	.spacing-after-#{$size}
		+respond-above(map-get($grid, default-breakpoint))
			> li
				margin-bottom: $var !important




